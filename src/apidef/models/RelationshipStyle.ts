/**
 * Structurizr
 * The web API for Structurizr.
 *
 * OpenAPI spec version: 1.26.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
* A definition of a relationship style.
*/
export class RelationshipStyle {
    /**
    * The tag to which this relationship style applies.
    */
    'tag'?: string;
    /**
    * The thickness of the line, in pixels.
    */
    'thickness'?: number;
    /**
    * The colour of the line, as a HTML RGB hex string (e.g. \'#ffffff\').
    */
    'color'?: string;
    /**
    * The standard font size used to render the relationship annotation, in pixels.
    */
    'fontSize'?: number;
    /**
    * The width of the relationship annotation, in pixels.
    */
    'width'?: number;
    /**
    * A flag to indicate whether the line is rendered as dashed or not.
    */
    'dashed'?: boolean;
    /**
    * The routing algorithm used when rendering lines.
    */
    'routing'?: RelationshipStyleRoutingEnum;
    /**
    * The position of the annotation along the line; 0 (start) to 100 (end).
    */
    'position'?: number;
    /**
    * The opacity used when rendering the line; 0-100.
    */
    'opacity'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "tag",
            "baseName": "tag",
            "type": "string",
            "format": ""
        },
        {
            "name": "thickness",
            "baseName": "thickness",
            "type": "number",
            "format": "integer"
        },
        {
            "name": "color",
            "baseName": "color",
            "type": "string",
            "format": ""
        },
        {
            "name": "fontSize",
            "baseName": "fontSize",
            "type": "number",
            "format": "integer"
        },
        {
            "name": "width",
            "baseName": "width",
            "type": "number",
            "format": "integer"
        },
        {
            "name": "dashed",
            "baseName": "dashed",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "routing",
            "baseName": "routing",
            "type": "RelationshipStyleRoutingEnum",
            "format": ""
        },
        {
            "name": "position",
            "baseName": "position",
            "type": "number",
            "format": "integer"
        },
        {
            "name": "opacity",
            "baseName": "opacity",
            "type": "number",
            "format": "integer"
        }    ];

    static getAttributeTypeMap() {
        return RelationshipStyle.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum RelationshipStyleRoutingEnum {
    Direct = 'Direct',
    Curved = 'Curved',
    Orthogonal = 'Orthogonal'
}

