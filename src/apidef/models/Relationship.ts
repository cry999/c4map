/**
 * Structurizr
 * The web API for Structurizr.
 *
 * OpenAPI spec version: 1.26.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
* A relationship between two elements.
*/
export class Relationship {
    /**
    * The ID of this relationship in the model.
    */
    'id'?: string;
    /**
    * A short description of this relationship.
    */
    'description'?: string;
    /**
    * A comma separated list of tags associated with this relationship.
    */
    'tags'?: string;
    /**
    * The URL where more information about this relationship can be found.
    */
    'url'?: string;
    /**
    * The ID of the source element.
    */
    'sourceId'?: string;
    /**
    * The ID of the destination element.
    */
    'destinationId'?: string;
    /**
    * The technology associated with this relationship (e.g. HTTPS, JDBC, etc).
    */
    'technology'?: string;
    /**
    * The interaction style (synchronous or asynchronous).
    */
    'interactionStyle'?: RelationshipInteractionStyleEnum;
    /**
    * The ID of the container-container relationship upon which this container instance-container instance relationship is based.
    */
    'linkedRelationshipId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "tags",
            "baseName": "tags",
            "type": "string",
            "format": ""
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string",
            "format": ""
        },
        {
            "name": "sourceId",
            "baseName": "sourceId",
            "type": "string",
            "format": ""
        },
        {
            "name": "destinationId",
            "baseName": "destinationId",
            "type": "string",
            "format": ""
        },
        {
            "name": "technology",
            "baseName": "technology",
            "type": "string",
            "format": ""
        },
        {
            "name": "interactionStyle",
            "baseName": "interactionStyle",
            "type": "RelationshipInteractionStyleEnum",
            "format": ""
        },
        {
            "name": "linkedRelationshipId",
            "baseName": "linkedRelationshipId",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Relationship.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum RelationshipInteractionStyleEnum {
    Synchronous = 'Synchronous',
    Asynchronous = 'Asynchronous'
}

